// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ichbinblau/hello-swagger/swagger/models"
)

// GetIPOKCode is the HTTP code returned for type GetIPOK
const GetIPOKCode int = 200

/*GetIPOK returns the ip address of the machine

swagger:response getIpOK
*/
type GetIPOK struct {

	/*the ip of the machine
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetIPOK creates GetIPOK with default headers values
func NewGetIPOK() *GetIPOK {

	return &GetIPOK{}
}

// WithPayload adds the payload to the get Ip o k response
func (o *GetIPOK) WithPayload(payload string) *GetIPOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Ip o k response
func (o *GetIPOK) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIPOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetIPDefault error

swagger:response getIpDefault
*/
type GetIPDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetIPDefault creates GetIPDefault with default headers values
func NewGetIPDefault(code int) *GetIPDefault {
	if code <= 0 {
		code = 500
	}

	return &GetIPDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get IP default response
func (o *GetIPDefault) WithStatusCode(code int) *GetIPDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get IP default response
func (o *GetIPDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get IP default response
func (o *GetIPDefault) WithPayload(payload *models.Error) *GetIPDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get IP default response
func (o *GetIPDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIPDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
